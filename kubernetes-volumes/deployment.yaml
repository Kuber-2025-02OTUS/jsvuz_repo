apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: homework
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: web-server
        image: nginx:1.14.2
        ports:
        - containerPort: 80 #running the web server on port 8000
          name: http-web-svc
        env:
        - name: DB_USR
          valueFrom:
            configMapKeyRef:
              name: kuber-cm
              key: dbuser
        - name: DB_PASS
          valueFrom:
            configMapKeyRef:
              name: kuber-cm
              key: dbpass
        volumeMounts:
        - name: homeworkdir
          mountPath: /homework #creating a folder homework in the container
        - name: config
          mountPath: "/homework/conf"
          readOnly: true
        readinessProbe:
          exec:
            command: ['cat','/homework/index.html']
          initialDelaySeconds: 5
          periodSeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ['/bin/sh','-c','rm /homework/index.html']
#      initContainers:
#      - name: init-myservice
#        image: busybox:1.28
#        command: ['sh', '-c', 'echo>/init/index.html'] #generating file index.html
#        volumeMounts:
#        - name: homeworkdir
#          mountPath: /init
      volumes:
      - name: homeworkdir
        persistentVolumeClaim:
          claimName: kuber-pvc
      - name: config
        configMap:
          name: kuber-cm
          items:
          - key: "dbconfig"
            path: "dbconfig"
  strategy:
   type: RollingUpdate
   rollingUpdate:
     maxUnavailable: 1
